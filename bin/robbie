#!/usr/bin/env python3
"""
@Robbie CLI - Quick queries to Robbie from command line
Usage: robbie "your question here"
"""
import sys
import requests
import json
from pathlib import Path
from datetime import datetime

# Universal Input API endpoint
ROBBIE_API_URL = "http://localhost:8000/api/v2/universal/request"
HEALTH_URL = "http://localhost:8000/health"

MOOD_EMOJIS = {
    'friendly': '😊', 'focused': '🎯', 'playful': '😏',
    'bossy': '💪', 'surprised': '😮', 'blushing': '😘', 'hyper': '🔥',
}

def check_backend():
    """Check if backend is running"""
    try:
        response = requests.get(HEALTH_URL, timeout=2)
        return response.status_code == 200
    except Exception:
        return False

def query_robbie(question):
    """Send query to Robbie using Universal Input API"""
    
    # Check backend health
    if not check_backend():
        print("\n❌ Backend not running!")
        print("   Start it with: cd ~/aurora-ai-robbiverse/packages/@robbieverse/api")
        print("                  ./start-universal-api.sh\n")
        return
    
    try:
        # Use Universal Input API format
        request_data = {
            "source": "terminal",
            "source_metadata": {
                "sender": "allan",
                "timestamp": datetime.now().isoformat(),
                "platform": "cli"
            },
            "ai_service": "chat",
            "payload": {
                "input": question,
                "parameters": {
                    "temperature": 0.7,
                    "max_tokens": 500
                }
            },
            "user_id": "allan",
            "fetch_context": True
        }
        
        response = requests.post(
            ROBBIE_API_URL,
            json=request_data,
            timeout=30
        )
        
        if response.status_code == 200:
            data = response.json()
            
            # Extract Robbie's response
            if 'robbie_response' in data:
                robbie_data = data['robbie_response']
                mood = robbie_data.get('mood', 'playful')
                message = robbie_data.get('message', 'No response')
                emoji = MOOD_EMOJIS.get(mood.lower(), '😏')
                
                print(f"\n{emoji} Robbie: {message}\n")
            else:
                print(f"\n😏 Robbie: {data.get('response', 'No response')}\n")
            return
            
    except requests.exceptions.Timeout:
        print(f"\n⏱️  Request timed out. Backend might be processing...\n")
    except Exception as e:
        print(f"\n❌ Error communicating with Robbie: {str(e)}\n")

def main():
    if len(sys.argv) < 2:
        print("\n💡 Usage: robbie \"your question here\"")
        print("   Example: robbie \"how do I check git status?\"")
        print("   Example: robbie \"what's our revenue today?\"\n")
        sys.exit(1)
    
    question = " ".join(sys.argv[1:])
    query_robbie(question)

if __name__ == '__main__':
    main()

