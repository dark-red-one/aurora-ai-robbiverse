version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: robbieverse-postgres
    ports:
      - "127.0.0.1:5432:5432" # localhost ONLY - keep it tight ðŸ˜˜
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../database:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_DB: robbieverse
      POSTGRES_USER: robbie
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-robbie_dev_2025}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.UTF-8"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U robbie -d robbieverse" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - robbieverse

  # Redis for caching (optional, for future use)
  redis:
    image: redis:7-alpine
    container_name: robbieverse-redis
    ports:
      - "127.0.0.1:6379:6379" # localhost only
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - robbieverse

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  robbieverse:
    driver: bridge

# Usage:
#   docker-compose up -d              # Start services
#   docker-compose logs -f postgres   # Watch postgres logs
#   docker-compose down               # Stop services
#   docker-compose down -v            # Stop and remove volumes (fresh start)
