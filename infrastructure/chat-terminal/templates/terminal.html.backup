<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Robbie Terminal</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: #1a1a2e;
            color: #c5c6c8;
            font-family: 'Courier New', 'Monaco', monospace;
            font-size: 14px;
            line-height: 1.4;
            overflow: hidden;
        }

        /* Terminal Container */
        .terminal-container {
            height: 100vh;
            display: flex;
            flex-direction: column;
            padding: 20px;
        }

        /* Header - ANSI/Commodore style */
        .terminal-header {
            border: 2px solid #5bc0de;
            padding: 10px;
            margin-bottom: 10px;
            text-align: center;
            background: #0f3460;
        }

        .terminal-header .title {
            color: #5bc0de;
            font-weight: bold;
            font-size: 16px;
            letter-spacing: 2px;
        }

        .terminal-header .subtitle {
            color: #7dd3fc;
            font-size: 12px;
            margin-top: 5px;
        }

        /* Messages Area */
        .messages-area {
            flex: 1;
            overflow-y: auto;
            overflow-x: hidden;
            border: 2px solid #5bc0de;
            padding: 15px;
            background: #16213e;
            font-size: 14px;
            line-height: 1.6;
        }

        /* Message Styles - ANSI Colors */
        .message {
            margin-bottom: 8px;
            word-wrap: break-word;
        }

        .message.system {
            color: #ffa500;
        }

        .message.robbie .username {
            color: #5bc0de;
            font-weight: bold;
        }

        .message.allan .username {
            color: #e94b3c;
            font-weight: bold;
        }

        .message.guest .username {
            color: #a8e6cf;
            font-weight: bold;
        }

        .message .timestamp {
            color: #6c757d;
            font-size: 11px;
        }

        .message .text {
            color: #c5c6c8;
        }

        /* Typing Indicator */
        .typing-indicator {
            color: #7dd3fc;
            font-style: italic;
        }

        /* Input Area */
        .input-area {
            border: 2px solid #5bc0de;
            padding: 10px;
            background: #0f3460;
            margin-top: 10px;
        }

        .input-prompt {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .input-prompt .prompt-symbol {
            color: #e94b3c;
            font-weight: bold;
        }

        .input-prompt input {
            flex: 1;
            background: transparent;
            border: none;
            outline: none;
            color: #c5c6c8;
            font-family: 'Courier New', 'Monaco', monospace;
            font-size: 14px;
            padding: 5px;
        }

        .input-prompt input::placeholder {
            color: #6c757d;
        }

        /* Cursor Blink */
        .cursor {
            display: inline-block;
            width: 8px;
            height: 14px;
            background: #5bc0de;
            animation: blink 1s infinite;
        }

        @keyframes blink {

            0%,
            49% {
                opacity: 1;
            }

            50%,
            100% {
                opacity: 0;
            }
        }

        /* Status Bar */
        .status-bar {
            display: flex;
            justify-content: space-between;
            padding: 8px;
            background: #0f3460;
            border: 2px solid #5bc0de;
            margin-top: 10px;
            font-size: 12px;
        }

        .status-bar .left {
            color: #7dd3fc;
        }

        .status-bar .right {
            color: #7dd3fc;
        }

        /* Slash Command Help */
        .slash-help {
            color: #ffa500;
            margin: 10px 0;
            padding: 10px;
            border-left: 3px solid #ffa500;
            background: #0f3460;
        }

        /* Scrollbar */
        .messages-area::-webkit-scrollbar {
            width: 10px;
        }

        .messages-area::-webkit-scrollbar-track {
            background: #16213e;
        }

        .messages-area::-webkit-scrollbar-thumb {
            background: #5bc0de;
            border: 1px solid #5bc0de;
        }

        /* Boot Sequence */
        .boot-line {
            color: #7dd3fc;
            margin: 2px 0;
        }

        .boot-line.ok {
            color: #5bc0de;
        }

        .boot-line.warning {
            color: #ffa500;
        }

        .boot-line.error {
            color: #e94b3c;
        }

        .boot-line.robbie-avatar {
            color: #5bc0de;
            margin: 0;
            line-height: 1.2;
        }

        .boot-line.robbie-name {
            color: #5bc0de;
            font-weight: bold;
            margin: 0;
            line-height: 1.2;
        }

        .boot-line.robbie-tagline {
            color: #ffa500;
            margin-top: 2px;
            font-size: 13px;
        }
    </style>
</head>

<body>
    <div class="terminal-container">
        <!-- Header -->
        <div class="terminal-header">
            <div class="title">═══════════════════════════════════════════════════════════════</div>
            <div class="title"> ROBBIE TERMINAL v3.0 • TestPilot CPG Network</div>
            <div class="title">═══════════════════════════════════════════════════════════════</div>
            <div class="subtitle">aurora-town-u44170:8007 • GPU: RTX 4090 • Status: ONLINE</div>
        </div>

        <!-- Messages Area -->
        <div class="messages-area" id="messagesArea">
            <!-- Boot sequence will appear here -->
        </div>

        <!-- Input Area -->
        <div class="input-area">
            <div class="input-prompt">
                <span class="prompt-symbol">&lt;Allan&gt;</span>
                <input type="text" id="messageInput" placeholder="Type message or /help for commands..."
                    autocomplete="off">
                <span class="cursor"></span>
            </div>
        </div>

        <!-- Status Bar -->
        <div class="status-bar">
            <div class="left">
                <span id="statusText">ONLINE</span> |
                GPU: <span id="gpuStatus">RTX4090</span> |
                Users: <span id="userCount">1</span>
            </div>
            <div class="right">
                <span id="localTime"></span> |
                Latency: <span id="latency">~100ms</span>
            </div>
        </div>
    </div>

    <script>
        class RobbieTerminal {
            constructor() {
                this.ws = null;
                this.messagesArea = document.getElementById('messagesArea');
                this.messageInput = document.getElementById('messageInput');
                this.guests = [];

                // Slash commands
                this.commands = {
                    '/help': this.showHelp.bind(this),
                    '/clear': this.clearScreen.bind(this),
                    '/invite': this.inviteGuest.bind(this),
                    '/guests': this.listGuests.bind(this),
                    '/status': this.showStatus.bind(this),
                    '/mood': this.changeMood.bind(this),
                    '/time': this.showTime.bind(this)
                };

                this.init();
            }

            init() {
                this.runBootSequence();
                this.setupEventListeners();
                this.updateClock();
                setInterval(() => this.updateClock(), 1000);
            }

            runBootSequence() {
                const bootLines = [
                    { text: 'ROBBIE TERMINAL SYSTEM v3.0', delay: 100, class: 'ok' },
                    { text: 'Initializing neural networks...', delay: 200 },
                    { text: '[OK] GPU detected: NVIDIA RTX 4090 (24GB VRAM)', delay: 300, class: 'ok' },
                    { text: '[OK] LLM loaded: qwen2.5:7b (Robbie personality)', delay: 400, class: 'ok' },
                    { text: '[OK] WebSocket connection established', delay: 500, class: 'ok' },
                    { text: '[OK] VPN tunnel: aurora-town active', delay: 600, class: 'ok' },
                    { text: '[READY] Robbie personality systems online', delay: 800, class: 'ok' },
                    { text: '', delay: 900 }
                ];

                let currentDelay = 0;
                bootLines.forEach(line => {
                    setTimeout(() => {
                        const bootLine = document.createElement('div');
                        bootLine.className = `boot-line ${line.class || ''}`;
                        bootLine.textContent = line.text;
                        this.messagesArea.appendChild(bootLine);
                        this.scrollToBottom();
                    }, currentDelay);
                    currentDelay += line.delay;
                });

                // HIGH-FIDELITY ANSI ART AVATAR
                const ansiAvatar = ["\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;101m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;109m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;131m  \u001b[0m\u001b[48;5;131m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;131m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;109m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;109m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;67m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;101m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;179m  \u001b[0m\u001b[48;5;179m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;101m  \u001b[0m\u001b[48;5;101m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;52m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;52m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;180m  \u001b[0m\u001b[48;5;144m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;144m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;180m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;109m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;179m  \u001b[0m\u001b[48;5;180m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;180m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;179m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;52m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;180m  \u001b[0m\u001b[48;5;179m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;179m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;179m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;131m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;111m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;174m  \u001b[0m\u001b[48;5;180m  \u001b[0m\u001b[48;5;174m  \u001b[0m\u001b[48;5;174m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;88m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;73m  \u001b[0m\u001b[48;5;111m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;179m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;52m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;102m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;52m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;209m  \u001b[0m\u001b[48;5;173m  \u001b[0m\u001b[48;5;209m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;22m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;101m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;66m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;130m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;67m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;103m  \u001b[0m\u001b[48;5;95m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;94m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;60m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m", "\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;215m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;216m  \u001b[0m\u001b[48;5;137m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;58m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;59m  \u001b[0m\u001b[48;5;110m  \u001b[0m\u001b[48;5;110m  \u001b[0m"];

                setTimeout(() => {
                    // Display Robbie's ANSI avatar
                    ansiAvatar.forEach((line, idx) => {
                        setTimeout(() => {
                            const avatarLine = document.createElement('div');
                            avatarLine.className = 'boot-line robbie-avatar';
                            avatarLine.innerHTML = line;
                            this.messagesArea.appendChild(avatarLine);
                            this.scrollToBottom();
                        }, idx * 50);
                    });

                    // Add name and tagline
                    setTimeout(() => {
                        const name = document.createElement('div');
                        name.className = 'boot-line robbie-tagline';
                        name.textContent = 'ROBBIE - Your AI Strategic Partner 🚀';
                        name.style.textAlign = 'center';
                        name.style.marginTop = '10px';
                        this.messagesArea.appendChild(name);
                        this.scrollToBottom();

                        const separator = document.createElement('div');
                        separator.className = 'boot-line ok';
                        separator.textContent = '═══════════════════════════════════════════════════';
                        separator.style.marginTop = '10px';
                        this.messagesArea.appendChild(separator);
                        this.scrollToBottom();

                        // Continue with welcome messages
                        setTimeout(() => {
                            this.addSystemMessage('Welcome to Robbie Terminal, Allan!');
                            this.addSystemMessage('Type /help to see available commands');
                            this.addMessage('Robbie', 'Hey Allan! 🚀 Ready to crush some work today? What\'s on your mind?', 'robbie');
                            this.connectWebSocket();
                        }, 500);
                    }, ansiAvatar.length * 50 + 200);

                }, currentDelay + 1000);
            }

            setupEventListeners() {
                this.messageInput.addEventListener('keypress', (e) => {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        this.handleInput();
                    }
                });

                // Tab completion for slash commands
                this.messageInput.addEventListener('keydown', (e) => {
                    if (e.key === 'Tab' && this.messageInput.value.startsWith('/')) {
                        e.preventDefault();
                        this.tabComplete();
                    }
                });
            }

            handleInput() {
                const input = this.messageInput.value.trim();
                if (!input) return;

                // Check for slash command
                if (input.startsWith('/')) {
                    const parts = input.split(' ');
                    const command = parts[0].toLowerCase();
                    const args = parts.slice(1);

                    if (this.commands[command]) {
                        this.commands[command](args);
                    } else {
                        this.addSystemMessage(`Unknown command: ${command}. Type /help for available commands.`);
                    }
                } else {
                    // Regular message
                    this.addMessage('Allan', input, 'allan');
                    this.sendToRobbie(input);
                }

                this.messageInput.value = '';
            }

            sendToRobbie(message) {
                // Show typing indicator
                const typingDiv = document.createElement('div');
                typingDiv.className = 'typing-indicator';
                typingDiv.id = 'typing';
                typingDiv.innerHTML = '&lt;Robbie&gt; is typing...';
                this.messagesArea.appendChild(typingDiv);
                this.scrollToBottom();

                if (this.ws && this.ws.readyState === WebSocket.OPEN) {
                    this.ws.send(JSON.stringify({
                        type: 'message',
                        content: message
                    }));
                } else {
                    document.getElementById('typing').remove();
                    this.addSystemMessage('[ERROR] WebSocket not connected. Reconnecting...');
                    this.connectWebSocket();
                }
            }

            connectWebSocket() {
                const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
                const wsUrl = `${protocol}//${window.location.host}/ws`;

                this.ws = new WebSocket(wsUrl);

                this.ws.onopen = () => {
                    console.log('WebSocket connected');
                    document.getElementById('statusText').textContent = 'ONLINE';
                };

                this.ws.onmessage = (event) => {
                    const data = JSON.parse(event.data);

                    if (data.type === 'chunk') {
                        // Remove typing indicator
                        const typing = document.getElementById('typing');
                        if (typing) typing.remove();

                        // Append to current Robbie message or create new one
                        let currentMsg = document.getElementById('robbie-streaming');
                        if (!currentMsg) {
                            currentMsg = document.createElement('div');
                            currentMsg.id = 'robbie-streaming';
                            currentMsg.className = 'message robbie';
                            currentMsg.innerHTML = '<span class="username">&lt;Robbie&gt;</span> <span class="text"></span>';
                            this.messagesArea.appendChild(currentMsg);
                        }

                        currentMsg.querySelector('.text').textContent += data.content;
                        this.scrollToBottom();
                    } else if (data.type === 'stream_complete') {
                        const msg = document.getElementById('robbie-streaming');
                        if (msg) {
                            msg.id = '';
                        }
                    }
                };

                this.ws.onerror = (error) => {
                    console.error('WebSocket error:', error);
                    document.getElementById('statusText').textContent = 'ERROR';
                };

                this.ws.onclose = () => {
                    console.log('WebSocket closed');
                    document.getElementById('statusText').textContent = 'OFFLINE';
                    setTimeout(() => this.connectWebSocket(), 3000);
                };
            }

            addMessage(username, text, type = 'allan') {
                const msg = document.createElement('div');
                msg.className = `message ${type}`;

                const timestamp = new Date().toLocaleTimeString();
                msg.innerHTML = `<span class="username">&lt;${username}&gt;</span> <span class="text">${this.escapeHtml(text)}</span>`;

                this.messagesArea.appendChild(msg);
                this.scrollToBottom();
            }

            addSystemMessage(text) {
                const msg = document.createElement('div');
                msg.className = 'message system';
                msg.textContent = `*** ${text}`;
                this.messagesArea.appendChild(msg);
                this.scrollToBottom();
            }

            // Slash Commands
            showHelp() {
                const helpText = `
╔═══════════════════════════════════════════════════╗
║              ROBBIE TERMINAL COMMANDS             ║
╚═══════════════════════════════════════════════════╝

/help              - Show this help message
/clear             - Clear the terminal screen
/invite [name]     - Invite a guest AI to the conversation
/guests            - List active guest AIs
/status            - Show system status
/mood [name]       - Change Robbie's mood
/time              - Show current time and date

Examples:
  /invite Steve Jobs
  /mood bossy
  /status
`;
                const helpDiv = document.createElement('div');
                helpDiv.className = 'slash-help';
                helpDiv.innerHTML = helpText.replace(/\n/g, '<br>');
                this.messagesArea.appendChild(helpDiv);
                this.scrollToBottom();
            }

            clearScreen() {
                this.messagesArea.innerHTML = '';
                this.addSystemMessage('Screen cleared');
            }

            inviteGuest(args) {
                if (args.length === 0) {
                    this.addSystemMessage('Usage: /invite [name]');
                    this.addSystemMessage('Example: /invite Steve Jobs');
                    return;
                }

                const guestName = args.join(' ');
                this.guests.push(guestName);

                this.addSystemMessage(`*** ${guestName} has joined the conversation`);
                this.addMessage(guestName, `Hey everyone! Great to be here.`, 'guest');

                // Update user count
                document.getElementById('userCount').textContent = 1 + this.guests.length;
            }

            listGuests() {
                if (this.guests.length === 0) {
                    this.addSystemMessage('No guest AIs in this conversation');
                } else {
                    this.addSystemMessage(`Active guests: ${this.guests.join(', ')}`);
                }
            }

            showStatus() {
                const status = `
═══════════════════════════════════════════════════
SYSTEM STATUS
═══════════════════════════════════════════════════
Connection: ONLINE
GPU: NVIDIA RTX 4090 (24GB)
Model: qwen2.5:7b (Robbie personality)
VPN: aurora-town active
Latency: ~100ms
Active Users: ${1 + this.guests.length}
═══════════════════════════════════════════════════
`;
                const statusDiv = document.createElement('div');
                statusDiv.className = 'message system';
                statusDiv.innerHTML = status.replace(/\n/g, '<br>');
                this.messagesArea.appendChild(statusDiv);
                this.scrollToBottom();
            }

            changeMood(args) {
                const moods = ['friendly', 'bossy', 'playful', 'blushing', 'surprised', 'focused'];
                if (args.length === 0) {
                    this.addSystemMessage(`Available moods: ${moods.join(', ')}`);
                    return;
                }

                const mood = args[0].toLowerCase();
                if (moods.includes(mood)) {
                    this.addSystemMessage(`Robbie's mood changed to: ${mood}`);
                } else {
                    this.addSystemMessage(`Unknown mood: ${mood}`);
                }
            }

            showTime() {
                const now = new Date();
                this.addSystemMessage(`Current time: ${now.toLocaleString()}`);
            }

            tabComplete() {
                const input = this.messageInput.value;
                const matches = Object.keys(this.commands).filter(cmd => cmd.startsWith(input));

                if (matches.length === 1) {
                    this.messageInput.value = matches[0] + ' ';
                } else if (matches.length > 1) {
                    this.addSystemMessage(`Possible commands: ${matches.join(', ')}`);
                }
            }

            updateClock() {
                const now = new Date();
                document.getElementById('localTime').textContent = now.toLocaleTimeString();
            }

            scrollToBottom() {
                this.messagesArea.scrollTop = this.messagesArea.scrollHeight;
            }

            escapeHtml(text) {
                const div = document.createElement('div');
                div.textContent = text;
                return div.innerHTML;
            }
        }

        // Initialize terminal
        new RobbieTerminal();
    </script>
</body>

</html>